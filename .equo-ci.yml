.shared_windows_runners: 
  tags: 
    - shared-windows
    - windows
    - windows-1809
    
    
stages: 
  - build
  - test
  - deploy
  
before_script: 
  - "Set-Variable -Name \"time\" -Value (date -Format \"%H:%m\")"
  - "echo ${time}"
  - "echo \"started by ${GITLAB_USER_NAME}\""
  - "echo ${PROJECT_DIR}"

build: 
  extends: 
  - .shared_windows_runners
  stage: build
  script: 
    - "cd \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\MSBuild\\Current\\Bin\""
    - '.\msbuild.exe "C:\GitLab-Runner\builds\Sebey\wpfapp\FirstApp\FirstApp\FirstApp.csproj" "/p:configuration=Release"'
  artifacts:
      name: ${CI_JOB_NAME}_${CI_PIPELINE_ID}
      paths:
        - $CI_PROJECT_DIR/FirstApp/FirstApp/obj/release
 
test: 
  extends: 
  - .shared_windows_runners
  stage: test
  script: 
    - "echo \"running scripts in the test job\""
    - "cd \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\Common7\\IDE\\CommonExtensions\\Microsoft\\TestWindow\" "
    - ".\\vstest.console.exe \"C:\\GitLab-Runner\\builds\\Sebey\\wpfapp\\FirstApp\\MVVMTest\\bin\\Debug\\MVVMTest.dll\" "
 
publish:
    image:
        name: registry.gitlab.com/maketechpub/mc:public
        entrypoint: ["/bin/sh", "-c"]
    stage: deploy
    variables:
      GIT_DEPTH: "1"
      RELEASE: "true"
    dependencies:
    - build
    before_script:
#   - QUALIFIER=$(if [[ -z "$RELEASE" ]] ; then echo "dev"; else echo "r"; fi)
#   - export VERSION=$(cat equo.go | grep 'app.Version = ".*"' | head -n 1 | awk -F'[><-]' '{print $3}').$QUALIFIER
    - export VERSION="0.0.1"
    - echo "version $VERSION"
    script:
    - mkdir -p public
    - "echo ${CI_PROJECT_DIR}"
    - cp -r $CI_PROJECT_DIR/FirstApp/FirstApp/obj/release/FirstApp.exe public
    - du -h -s public || true
    - mc config host add do https://nyc3.digitaloceanspaces.com "$DO_KEY" "$DO_SECRET" --lookup auto
    - mc mb -p do/$DO_BUCKET
    - mc mirror --overwrite --remove public/relase do/$DO_BUCKET/rls/
    - current=$(date -u +"%FT%T.%3NZ")
    - echo "current $current"
    - 'echo "{\"version\": \"${VERSION}\", \"created\": \"${current}\", \"downloadInstallPath\": \"equo\"}" > public/metadata.json'
    - mc cp public/FirstApp.exe do/$DO_BUCKET/rls/
    after_script:
    - ls public/FirstApp.exe
    only:
    - master